// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"context"
	"net/http"

	"github.com/go-faster/errors"
)

// SecuritySource is provider of security values (tokens, passwords, etc.).
type SecuritySource interface {
	// PersonalAccessToken provides personalAccessToken security value.
	PersonalAccessToken(ctx context.Context, operationName OperationName) (PersonalAccessToken, error)
	// UsernamePassword provides usernamePassword security value.
	UsernamePassword(ctx context.Context, operationName OperationName) (UsernamePassword, error)
}

func (s *Client) securityPersonalAccessToken(ctx context.Context, operationName OperationName, req *http.Request) error {
	t, err := s.sec.PersonalAccessToken(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"PersonalAccessToken\"")
	}
	req.Header.Set("Authorization", "Bearer "+t.Token)
	return nil
}
func (s *Client) securityUsernamePassword(ctx context.Context, operationName OperationName, req *http.Request) error {
	t, err := s.sec.UsernamePassword(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"UsernamePassword\"")
	}
	req.SetBasicAuth(t.Username, t.Password)
	return nil
}
