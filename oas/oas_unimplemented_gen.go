// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// AddTeamMember implements addTeamMember operation.
//
// Add team member.
//
// POST /v1/teams/{name}/members
func (UnimplementedHandler) AddTeamMember(ctx context.Context, req *TeamMemberRequest, params AddTeamMemberParams) (r *TeamMemberResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ChangeUserPassword implements changeUserPassword operation.
//
// Change password for user.
//
// POST /v1/users/{username}/password
func (UnimplementedHandler) ChangeUserPassword(ctx context.Context, req *UserPasswordChangeRequest, params ChangeUserPasswordParams) error {
	return ht.ErrNotImplemented
}

// CreatePersonalAccessToken implements createPersonalAccessToken operation.
//
// Create personal access token.
//
// POST /v1/tokens
func (UnimplementedHandler) CreatePersonalAccessToken(ctx context.Context, req *PersonalAccessTokenRequest) (r *PersonalAccessTokenCreationResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateRepository implements createRepository operation.
//
// Create repository.
//
// POST /v1/repositories
func (UnimplementedHandler) CreateRepository(ctx context.Context, req *RepositoryRequest) (r *RepositoryResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateTeam implements createTeam operation.
//
// Create team.
//
// POST /v1/teams
func (UnimplementedHandler) CreateTeam(ctx context.Context, req *TeamRequest) (r *TeamResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateUser implements createUser operation.
//
// Create user.
//
// POST /v1/users
func (UnimplementedHandler) CreateUser(ctx context.Context, req *UserRequest) (r *UserResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// DeletePersonalAccessToken implements deletePersonalAccessToken operation.
//
// Delete personal access token.
//
// DELETE /v1/tokens/{id}
func (UnimplementedHandler) DeletePersonalAccessToken(ctx context.Context, params DeletePersonalAccessTokenParams) error {
	return ht.ErrNotImplemented
}

// DeleteRepository implements deleteRepository operation.
//
// Delete repository.
//
// DELETE /v1/repositories/{namespace}/{name}
func (UnimplementedHandler) DeleteRepository(ctx context.Context, params DeleteRepositoryParams) error {
	return ht.ErrNotImplemented
}

// DeleteTeam implements deleteTeam operation.
//
// Delete team.
//
// DELETE /v1/teams/{name}
func (UnimplementedHandler) DeleteTeam(ctx context.Context, params DeleteTeamParams) error {
	return ht.ErrNotImplemented
}

// DeleteUser implements deleteUser operation.
//
// Delete user.
//
// DELETE /v1/users/{username}
func (UnimplementedHandler) DeleteUser(ctx context.Context, params DeleteUserParams) error {
	return ht.ErrNotImplemented
}

// GetPersonalAccessToken implements getPersonalAccessToken operation.
//
// Get personal access token.
//
// GET /v1/tokens/{id}
func (UnimplementedHandler) GetPersonalAccessToken(ctx context.Context, params GetPersonalAccessTokenParams) (r *PersonalAccessTokenResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// GetRepository implements getRepository operation.
//
// Get repository.
//
// GET /v1/repositories/{namespace}/{name}
func (UnimplementedHandler) GetRepository(ctx context.Context, params GetRepositoryParams) (r *RepositoryResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTeam implements getTeam operation.
//
// Get team.
//
// GET /v1/teams/{name}
func (UnimplementedHandler) GetTeam(ctx context.Context, params GetTeamParams) (r *TeamResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// GetUser implements getUser operation.
//
// Get user.
//
// GET /v1/users/{username}
func (UnimplementedHandler) GetUser(ctx context.Context, params GetUserParams) (r *UserResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPersonalAccessTokens implements listPersonalAccessTokens operation.
//
// List personal access tokens.
//
// GET /v1/tokens
func (UnimplementedHandler) ListPersonalAccessTokens(ctx context.Context) (r []PersonalAccessTokenResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListRepositories implements listRepositories operation.
//
// List repositories.
//
// GET /v1/repositories
func (UnimplementedHandler) ListRepositories(ctx context.Context) (r []RepositoryResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListTeamMembers implements listTeamMembers operation.
//
// List team members.
//
// GET /v1/teams/{name}/members
func (UnimplementedHandler) ListTeamMembers(ctx context.Context, params ListTeamMembersParams) (r []TeamMemberResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListTeams implements listTeams operation.
//
// List teams.
//
// GET /v1/teams
func (UnimplementedHandler) ListTeams(ctx context.Context) (r []TeamResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUsers implements listUsers operation.
//
// List users.
//
// GET /v1/users
func (UnimplementedHandler) ListUsers(ctx context.Context) (r []UserResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// RemoveTeamMember implements removeTeamMember operation.
//
// Remove team member.
//
// DELETE /v1/teams/{name}/members/{username}
func (UnimplementedHandler) RemoveTeamMember(ctx context.Context, params RemoveTeamMemberParams) error {
	return ht.ErrNotImplemented
}

// NewError creates *ErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorStatusCode) {
	r = new(ErrorStatusCode)
	return r
}
